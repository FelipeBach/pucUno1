#BlueJ class context
comment0.target=Player
comment1.params=nome
comment1.target=Player(java.lang.String)
comment1.text=\r\n\ cria\ um\ array\ list\ que\ armazena\ as\ cartas\ do\ jogador\r\n\ atribui\ nome\ ao\ jogador.\r\n\ Esse\ objeto\ \u00C3\u00A9\ criado\ na\ classe\ UNO.\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Representa\u00C3\u00A7\u00C3\u00A3o\ do\ jogador\ em\ texto\r\n
comment2.params=
comment2.target=int\ numberOfCards()
comment2.text=\r\n\ retorna\ o\ numero\ de\ cartas\ que\ o\ jogador\ possui\ na\ m\u00C3\u00A3o\r\n
comment3.params=
comment3.target=java.util.ArrayList\ PlayerCards()
comment3.text=\r\n\ Retorna\ todas\ as\ cartas\ que\ o\ jogador\ possui\ na\ m\u00C3\u00A3o\ como\ um\ ArrayList\r\n\ Isso\ \u00C3\u00A9\ usado\ para\ chegar\ se\ o\ jogador\ tem\ alguma\ carta\ valida\ para\ jogar\r\n
comment4.params=c
comment4.target=boolean\ pickCards(Card)
comment5.params=c
comment5.target=Card\ throwCard(int)
comment5.text=\r\n\ O\ jogador\ joga\ uma\ carta\ de\ sua\ m\u00C3\u00A3o\ que\ esta\ na\ posi\u00C3\u00A7\u00C3\u00A3o\ 'c'.\ c\ \u00C3\u00A9\ um\ valor\ integer\ e\ \u00C3\u00A9\ passado\ como\ parametro\r\n
comment6.params=
comment6.target=void\ sayUno()
comment7.params=
comment7.target=void\ showCards()
comment7.text=\r\n\ Isso\ \u00C3\u00A9\ uma\ representa\u00C3\u00A7\u00C3\u00A3o\ gr\u00C3\u00A1fica\ de\ uma\ carta\r\n\ apenas\ para\ fazer\ as\ cartas\ ficarem\ um\ pouco\ mais\ parecidas\ com\ cartas\ hahaha\r\n\ usado\ no\ m\u00C3\u00A9todo\ showboard()\ na\ classe\ Uno\r\n
comment8.params=
comment8.target=void\ hideCards()
comment8.text=\r\n\ esconde\ cartas\ do\ jogador\r\n\ usado\ no\ m\u00C3\u00A9todo\ showboard()\ na\ classe\ Uno\r\n
comment9.params=
comment9.target=boolean\ hasWon()
comment9.text=\r\n\ verifica\ se\ o\ jogador\ venceu\ ou\ n\u00C3\u00A3o\r\n
numComments=11
